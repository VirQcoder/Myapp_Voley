# Generated by Django 4.1.5 on 2023-05-06 06:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amplua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amplua', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameMistake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mistake', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(blank=True, null=True)),
                ('height_level', models.IntegerField(blank=True, null=True)),
                ('game_number', models.IntegerField(blank=True, null=True)),
                ('is_captain', models.BooleanField(blank=True, default=False, null=True)),
                ('is_leader', models.BooleanField(blank=True, default=False, null=True)),
                ('amplua', models.ForeignKey(blank=True, db_column='Amplua_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.amplua')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatisticOnSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(db_column='Player_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.player')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Subgroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subgroup', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('photo', models.ImageField(null=True, upload_to='images/')),
                ('logo', models.CharField(blank=True, max_length=150, null=True)),
                ('foundation_date', models.DateField(blank=True, null=True)),
                ('sponsor', models.CharField(blank=True, max_length=100, null=True)),
                ('sponsor_logo', models.CharField(blank=True, max_length=100, null=True)),
                ('coach', models.ForeignKey(blank=True, db_column='Coach_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.coach')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('date_end', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeReceiving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeSpike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TypeTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=45)),
                ('surname', models.CharField(max_length=45)),
                ('middle_name', models.CharField(blank=True, max_length=45, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('photo', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_extra', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(related_name='volleyapp_users', to='auth.group')),
                ('role', models.ForeignKey(blank=True, db_column='Role_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.role')),
                ('user_permissions', models.ManyToManyField(related_name='volleyapp_users', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamOnTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField(blank=True, null=True)),
                ('league', models.ForeignKey(blank=True, db_column='League_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.league')),
                ('subgroup', models.ForeignKey(blank=True, db_column='Subgroup_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.subgroup')),
                ('team', models.ForeignKey(db_column='Team_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.team')),
                ('tournament', models.ForeignKey(db_column='Tournament_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TeamOnMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(db_column='Score', default=0)),
                ('match', models.ForeignKey(db_column='Match_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.match')),
                ('team', models.ForeignKey(db_column='Team_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.team')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='type',
            field=models.ForeignKey(blank=True, db_column='Team_type_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.typeteam'),
        ),
        migrations.CreateModel(
            name='Spike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_point', models.IntegerField()),
                ('is_out', models.IntegerField(blank=True, default=False)),
                ('in_net', models.IntegerField(blank=True, default=False)),
                ('x_from', models.IntegerField(blank=True, null=True)),
                ('y_from', models.IntegerField(blank=True, null=True)),
                ('x_to', models.IntegerField(blank=True, null=True)),
                ('y_to', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
                ('type_spike', models.ForeignKey(blank=True, db_column='Type_spike_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.typespike')),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('match', models.ForeignKey(db_column='Match_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.match')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_ace', models.BooleanField(default=False)),
                ('is_error', models.BooleanField(default=False)),
                ('x_from', models.FloatField(blank=True, null=True)),
                ('y_from', models.FloatField(blank=True, null=True)),
                ('x_to', models.FloatField(blank=True, null=True)),
                ('y_to', models.FloatField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
                ('type_service', models.ForeignKey(blank=True, db_column='Type_service_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.typeservice')),
            ],
        ),
        migrations.CreateModel(
            name='Receiving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
                ('type_receiving', models.ForeignKey(blank=True, db_column='Type_receiving_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.typereceiving')),
            ],
        ),
        migrations.AddField(
            model_name='playerstatisticonset',
            name='set',
            field=models.ForeignKey(db_column='Set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.set'),
        ),
        migrations.CreateModel(
            name='PlayerHasMistake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('game_mistake', models.ForeignKey(db_column='Game_mistake_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.gamemistake')),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerHasMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_number', models.IntegerField(blank=True, null=True)),
                ('amplua', models.ForeignKey(blank=True, db_column='Amplua_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.amplua')),
                ('match', models.ForeignKey(db_column='Match_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.match')),
                ('player', models.ForeignKey(db_column='Player_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerHasCards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('card', models.ForeignKey(db_column='Card_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.card')),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(db_column='Team_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.team'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.ForeignKey(db_column='User_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.user'),
        ),
        migrations.CreateModel(
            name='MatchHasJudge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('judge', models.ForeignKey(db_column='Judge_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.judge')),
                ('match', models.ForeignKey(db_column='Match_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.match')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='matches_place',
            field=models.ForeignKey(db_column='Matches_place_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.matchplace'),
        ),
        migrations.AddField(
            model_name='match',
            name='stage',
            field=models.ForeignKey(blank=True, db_column='Stage_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.stage'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(db_column='Tournament_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.tournament'),
        ),
        migrations.AddField(
            model_name='judge',
            name='user',
            field=models.ForeignKey(db_column='User_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.user'),
        ),
        migrations.AddField(
            model_name='coach',
            name='user',
            field=models.ForeignKey(db_column='User_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.user'),
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('player_statistic_on_set', models.ForeignKey(db_column='Player_statistic_on_set_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.playerstatisticonset')),
                ('type_block', models.ForeignKey(blank=True, db_column='Type_block_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.typeblock')),
            ],
        ),
        migrations.CreateModel(
            name='UserHasMedia',
            fields=[
                ('media', models.OneToOneField(db_column='Media_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='volleyapp.media')),
                ('link', models.CharField(max_length=100)),
                ('user', models.ForeignKey(db_column='User_id', on_delete=django.db.models.deletion.DO_NOTHING, to='volleyapp.user')),
            ],
        ),
    ]
